<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppVersion" xml:space="preserve">
    <value>バージョン</value>
    <comment>Version</comment>
  </data>
  <data name="AppVersionDescription" xml:space="preserve">
    <value>アプリケーションのバージョン</value>
    <comment>Application version</comment>
  </data>
  <data name="AutoCheck" xml:space="preserve">
    <value>更新を自動的にチェックする</value>
  </data>
  <data name="Broadcast_Address" xml:space="preserve">
    <value>ブロードキャスト アドレス</value>
    <comment>Broadcast Address</comment>
  </data>
  <data name="Broadcast_AddressDescription" xml:space="preserve">
    <value>WOL ブロードキャスト パケット用のブロードキャスト IP アドレスを入力します。</value>
    <comment>Enter the broadcast IP Address for the WOL broadcast packets.</comment>
  </data>
  <data name="cat_Application" xml:space="preserve">
    <value>アプリケーション</value>
    <comment>Application</comment>
  </data>
  <data name="cat_Emergency" xml:space="preserve">
    <value>緊急設定</value>
    <comment>Emergency settings</comment>
  </data>
  <data name="cat_Shutdown" xml:space="preserve">
    <value>シャットダウン</value>
    <comment>Shutdown</comment>
  </data>
  <data name="cat_WOL" xml:space="preserve">
    <value>WOL</value>
    <comment>WOL</comment>
  </data>
  <data name="Culture" xml:space="preserve">
    <value>Culture</value>
    <comment>Culture</comment>
  </data>
  <data name="dbPath" xml:space="preserve">
    <value>データベース パス</value>
    <comment>Database path</comment>
  </data>
  <data name="Delay" xml:space="preserve">
    <value>猶予時間</value>
    <comment>Time delay</comment>
  </data>
  <data name="DelayDescription" xml:space="preserve">
    <value>シャットダウンまでの標準の猶予時間。</value>
    <comment>The default time delay for shutdowns.</comment>
  </data>
  <data name="EmergencyDelay" xml:space="preserve">
    <value>猶予時間</value>
    <comment>Time delay</comment>
  </data>
  <data name="EmergencyDelayDescription" xml:space="preserve">
    <value>緊急シャットダウン用の猶予時間。</value>
    <comment>The time delay for emergency shutdowns.</comment>
  </data>
  <data name="EmergencyShutdown" xml:space="preserve">
    <value>標準メッセージ</value>
    <comment>Default Message</comment>
  </data>
  <data name="EmergencyShutdownDescription" xml:space="preserve">
    <value>緊急シャットダウンの際のメッセージ</value>
    <comment>The emergency shutdown message.</comment>
  </data>
  <data name="Enable_Sound" xml:space="preserve">
    <value>サウンドを有効にする</value>
    <comment>Enable sound</comment>
  </data>
  <data name="Enable_SoundDescription" xml:space="preserve">
    <value>監視対象マシンがオンラインになったり停止したときに、音を鳴らす。</value>
    <comment>Play a sound when a monitored server comes online, or stops responding.</comment>
  </data>
  <data name="Force" xml:space="preserve">
    <value>強制シャットダウン</value>
    <comment>Force shutdown</comment>
  </data>
  <data name="ForceDescription" xml:space="preserve">
    <value>リモートマシンを強制的にシャットダウンする。未保存のファイルは失われます。</value>
    <comment>Force remote server to shutdown.  Unsaved files will be lost.</comment>
  </data>
  <data name="Language" xml:space="preserve">
    <value>言語</value>
    <comment>Language</comment>
  </data>
  <data name="Reboot" xml:space="preserve">
    <value>再起動</value>
    <comment>Reboot</comment>
  </data>
  <data name="RebootDescription" xml:space="preserve">
    <value>有効にすると、シャットダウン後に再起動します。</value>
    <comment>If true, then reboot after shutdown.</comment>
  </data>
  <data name="ShowSplash" xml:space="preserve">
    <value>スプラッシュ画面の表示</value>
    <comment>Show Splash Screen</comment>
  </data>
  <data name="Shutdown" xml:space="preserve">
    <value>標準メッセージ</value>
    <comment>Default Message</comment>
  </data>
  <data name="ShutdownDescription" xml:space="preserve">
    <value>標準のシャットダウン時メッセージ。</value>
    <comment>The default shutdown message.</comment>
  </data>
  <data name="Threads" xml:space="preserve">
    <value>スレッド数</value>
    <comment>Number of threads</comment>
  </data>
  <data name="UDPPort" xml:space="preserve">
    <value>UDP ポート</value>
    <comment>UDP Port</comment>
  </data>
  <data name="UDPPortDescription" xml:space="preserve">
    <value>メッセージをブロードキャストするための UDP ポート番号。</value>
    <comment>Enter the UDP Port number for the broadcast messages.</comment>
  </data>
</root>